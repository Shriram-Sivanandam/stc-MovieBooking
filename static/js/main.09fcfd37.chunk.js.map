{"version":3,"sources":["components/Student.js","App.js","reportWebVitals.js","index.js"],"names":["Student","useState","name","setName","reg","setReg","dob","setDob","program","setProgram","email","setEmail","phone","setPhone","error","setError","message","setMessage","Container","className","Alert","variant","Form","onSubmit","e","preventDefault","regnum","count","test","slice","length","inputText","ret","leapyear","partsdate","split","dd","parseInt","mm","yy","validateDate","validateEmail","Group","Label","Control","required","placeholder","value","onChange","target","Button","varient","type","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09fcfd37.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, Form, Alert, Button } from \"react-bootstrap\";\r\nimport \"./Form.css\";\r\n\r\nfunction Student() {\r\n  const [name, setName] = useState(\"\");\r\n  const [reg, setReg] = useState(\"\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [program, setProgram] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  function validateRegNo(regnum) {\r\n    if (\r\n      /^\\d+$/.test(regnum.slice(0, 2)) &&\r\n      !/[^A-Z]/.test(regnum.slice(2, 5)) &&\r\n      /^\\d+$/.test(regnum.slice(5, 8)) &&\r\n      regnum.length === 9\r\n    ) {\r\n      return true;\r\n    } else {\r\n      setError(\"Invalid registration number\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function validateDate(inputText) {\r\n    var ret = true;\r\n    var dateformat = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\r\n    if (dateformat.test(inputText)) {\r\n      var leapyear = false;\r\n      var partsdate = inputText.split(\"/\");\r\n      var lenparts = partsdate.length;\r\n      if (lenparts > 1);\r\n      else {\r\n        setError(\"Date is invalid\");\r\n        ret = false;\r\n      }\r\n      var dd = parseInt(partsdate[0]);\r\n      var mm = parseInt(partsdate[1]);\r\n      var yy = parseInt(partsdate[2]);\r\n      var listofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n      if (mm === 1 || mm > 2) {\r\n        if (dd > listofDays[mm - 1]) {\r\n          setError(\"Invalid number of days\");\r\n          ret = false;\r\n        }\r\n      }\r\n      if (mm === 2) {\r\n        if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\r\n          leapyear = true;\r\n        }\r\n        if (leapyear === false && dd >= 29) {\r\n          setError(\"Invalid number of days\");\r\n          ret = false;\r\n        }\r\n        if (leapyear === true && dd > 29) {\r\n          setError(\"Invalid number of days\");\r\n          ret = false;\r\n        }\r\n      }\r\n    } else {\r\n      setError(\"Invalid date format\");\r\n      ret = false;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  function validateEmail(email) {\r\n    if (\r\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\r\n        email\r\n      )\r\n    ) {\r\n      return true;\r\n    } else {\r\n      setError(\"Invalid email address\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    var count = 0;\r\n    if (!!/[^a-zA-Z]/.test(name)) {\r\n      setError(\"Your name must contain only letters (Sorry Elon Musk's son)\");\r\n      count++;\r\n    }\r\n    if (validateRegNo(reg));\r\n    else {\r\n      count++;\r\n    }\r\n    if (validateDate(dob));\r\n    else {\r\n      count++;\r\n    }\r\n    if (validateEmail(email));\r\n    else {\r\n      count++;\r\n    }\r\n    if (/^\\d+$/.test(phone) && phone.length === 10);\r\n    else {\r\n      setError(\"Your phone number is invalid\");\r\n      count++;\r\n    }\r\n\r\n    if (count > 0) {\r\n      setMessage(\"\");\r\n    }\r\n\r\n    if (count === 0) {\r\n      setError(\"\");\r\n      setMessage(\"Your form has successfully been submitted\");\r\n      setName(\"\");\r\n      setReg(\"\");\r\n      setDob(\"\");\r\n      setProgram(\"\");\r\n      setEmail(\"\");\r\n      setPhone(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"mb-4\">Student Registration Form</h1>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      {message && <Alert variant=\"success\">{message}</Alert>}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"form__element\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            required\r\n            placeholder=\"Your Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"form__element\">\r\n          <Form.Label>Registration Number</Form.Label>\r\n          <Form.Control\r\n            required\r\n            placeholder=\"Your Registration Number\"\r\n            value={reg}\r\n            onChange={(e) => setReg(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"form__element\">\r\n          <Form.Label>DOB</Form.Label>\r\n          <Form.Control\r\n            required\r\n            placeholder=\"dd/mm/yyyy\"\r\n            value={dob}\r\n            onChange={(e) => setDob(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"form__element\">\r\n          <Form.Label>Program</Form.Label>\r\n          <Form.Control\r\n            required\r\n            placeholder=\"Your Program\"\r\n            value={program}\r\n            onChange={(e) => setProgram(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"form__element\">\r\n          <Form.Label>Email Id</Form.Label>\r\n          <Form.Control\r\n            required\r\n            placeholder=\"Your Student Email Id\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"form__element\">\r\n          <Form.Label>Phone Number</Form.Label>\r\n          <Form.Control\r\n            required\r\n            placeholder=\"Your Phone Number\"\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button varient=\"primary\" className=\"btn\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Student;\r\n","import \"./App.css\";\nimport Student from \"./components/Student\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Student />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}